// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: clutch/v1/use_shell.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UseShellRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AppName       string                 `protobuf:"bytes,1,opt,name=app_name,json=appName,proto3" json:"app_name,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	TimeoutMs     int64                  `protobuf:"varint,3,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UseShellRequest) Reset() {
	*x = UseShellRequest{}
	mi := &file_clutch_v1_use_shell_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseShellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseShellRequest) ProtoMessage() {}

func (x *UseShellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_clutch_v1_use_shell_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseShellRequest.ProtoReflect.Descriptor instead.
func (*UseShellRequest) Descriptor() ([]byte, []int) {
	return file_clutch_v1_use_shell_proto_rawDescGZIP(), []int{0}
}

func (x *UseShellRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *UseShellRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *UseShellRequest) GetTimeoutMs() int64 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

type UseShellResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        string                 `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UseShellResponse) Reset() {
	*x = UseShellResponse{}
	mi := &file_clutch_v1_use_shell_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UseShellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseShellResponse) ProtoMessage() {}

func (x *UseShellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_clutch_v1_use_shell_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseShellResponse.ProtoReflect.Descriptor instead.
func (*UseShellResponse) Descriptor() ([]byte, []int) {
	return file_clutch_v1_use_shell_proto_rawDescGZIP(), []int{1}
}

func (x *UseShellResponse) GetOutput() string {
	if x != nil {
		return x.Output
	}
	return ""
}

func (x *UseShellResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_clutch_v1_use_shell_proto protoreflect.FileDescriptor

const file_clutch_v1_use_shell_proto_rawDesc = "" +
	"\n" +
	"\x19clutch/v1/use_shell.proto\x12\rclutch_rpc.v1\"e\n" +
	"\x0fUseShellRequest\x12\x19\n" +
	"\bapp_name\x18\x01 \x01(\tR\aappName\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x03 \x01(\x03R\ttimeoutMs\"@\n" +
	"\x10UseShellResponse\x12\x16\n" +
	"\x06output\x18\x01 \x01(\tR\x06output\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2`\n" +
	"\x0fUseShellService\x12M\n" +
	"\bUseShell\x12\x1e.clutch_rpc.v1.UseShellRequest\x1a\x1f.clutch_rpc.v1.UseShellResponse\"\x00B.Z,github.com/vinewz/clutchRPC/go/gen/clutch/v1b\x06proto3"

var (
	file_clutch_v1_use_shell_proto_rawDescOnce sync.Once
	file_clutch_v1_use_shell_proto_rawDescData []byte
)

func file_clutch_v1_use_shell_proto_rawDescGZIP() []byte {
	file_clutch_v1_use_shell_proto_rawDescOnce.Do(func() {
		file_clutch_v1_use_shell_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_clutch_v1_use_shell_proto_rawDesc), len(file_clutch_v1_use_shell_proto_rawDesc)))
	})
	return file_clutch_v1_use_shell_proto_rawDescData
}

var file_clutch_v1_use_shell_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_clutch_v1_use_shell_proto_goTypes = []any{
	(*UseShellRequest)(nil),  // 0: clutch_rpc.v1.UseShellRequest
	(*UseShellResponse)(nil), // 1: clutch_rpc.v1.UseShellResponse
}
var file_clutch_v1_use_shell_proto_depIdxs = []int32{
	0, // 0: clutch_rpc.v1.UseShellService.UseShell:input_type -> clutch_rpc.v1.UseShellRequest
	1, // 1: clutch_rpc.v1.UseShellService.UseShell:output_type -> clutch_rpc.v1.UseShellResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_clutch_v1_use_shell_proto_init() }
func file_clutch_v1_use_shell_proto_init() {
	if File_clutch_v1_use_shell_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_clutch_v1_use_shell_proto_rawDesc), len(file_clutch_v1_use_shell_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_clutch_v1_use_shell_proto_goTypes,
		DependencyIndexes: file_clutch_v1_use_shell_proto_depIdxs,
		MessageInfos:      file_clutch_v1_use_shell_proto_msgTypes,
	}.Build()
	File_clutch_v1_use_shell_proto = out.File
	file_clutch_v1_use_shell_proto_goTypes = nil
	file_clutch_v1_use_shell_proto_depIdxs = nil
}
